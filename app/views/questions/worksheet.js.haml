= render :template => 'shared/clear_sign_in_form.js'
:plain
	//console.log("Load the worksheet")
	var worksheet = $("#{escape_javascript(
		render( :partial => 'plan/question', :locals => {:question => question, :questions => questions, :question_counter => question.order_id } )
	)}");

	worksheet.find('div.my_rating').addClass('js');
	worksheet.find('div.community_rating').removeClass('no_js');
	worksheet.attr('id',#{question.id});
	
	if(#{!question.show_new}){
		var tps = worksheet.find('div.talking_point_entry:eq(7) ~ div.talking_point_entry');
		tps.hide();
		$('<a class="display_all_tp" href="#">Display ' + tps.size() + ' more talking point' + (tps.size()>1 ? 's' : '' ) + '</a>').insertAfter(tps.last())
		$('a.display_all_tp').die('click').live('click',
			function(){
				$(this).closest('div.question_worksheet').find('div.talking_point_entry').show(1000);
				$(this).closest('div.question_worksheet').find('h2.ellipsis').remove();
				$(this).remove();
				return false;
			}
		);
	}
	
	function scrollToElement(){
		var highlight = $('.highlight');
		//console.log("highlight.size(): " + highlight.size())
		if(highlight.size()>0){
			//console.log("scroll to")
			$.scrollTo(highlight,600);	
		}
	}
	setTimeout(scrollToElement,1000);

	setTimeout(init_worksheet,10)
	
	setTimeout(function(){
		// Disable functionality in the example talking points
		$('div.talking_point_entry[id="0"] a').each(function(){ var link = $(this); link.removeAttr('data-remote').attr('href','#')})
			.die('click').live('click',
				function(){
					alert('This is an example of a talking point and you cannot act on it.'); 
					return false;
				}
			);
	},100);

	var question_summary = $('div.question_summary[id="#{question.id}"]');
	var q_link = question_summary.find('a.display_worksheet');
	
	question_summary.find('div.talking_point_sec').replaceWith(worksheet);
	worksheet.hide();
	worksheet.slideDown(800);
	
	function make_talking_points_draggable($talking_points, sortable_destination){
		$talking_points.draggable( {
			revert: function(socketObj) {
			    if (socketObj === false) {
			        // Drop was rejected, revert the helper.
			        return true;
			    } else {
			        // Drop was accepted, don't revert.
			        return false;
			    }
			},
			revertDuration: 600,
			start: function(event,ui){
				// refresh your sortable -- so you can drop
				$('div.curated_list ul.talking_points[id="#{question.id}"]').sortable('refresh');
			},
			connectToSortable: sortable_destination,
			helper: 'clone'
		});
	}
	if(am_curator){
		make_talking_points_draggable( $('div.talking_points_list[id="#{question.id}"] p.talking_point'), $('div.curated_list ul[id="#{question.id}"]') );
	}
	
	
	// this code applies to talking points and comments that are displaying their new comments
	// Get the links in TP with new open discussion
	var links = []
	$('div.talking_point_comments').each( 
		function(){
			console.log("talking_point_comments id: " + this.id)
			links.push( $('div.talking_point_entry[id="' + this.id + '"] a.tp_show_coms') )
		}
	);	
	$('div.comment_comments').each( 
		function(){
			console.log("comment_comments id: " + this.id)
			links.push( $('div.Comment[id="' + this.id + '"] a.reply') )
		}
	);	
	$.each(links,
		function(){
			var link = $(this);
			link.removeData('ujs:enable_with'); 
			// activate the link to hide the discussion
			link.bind('ajax:beforeSend', 
				function(){
					return false;
				}).bind('click', 
				function(){
					var el = $(this);
					el.unbind('ajax:beforeSend').unbind('click');
					var disc = el.closest('div[id]').next('div.discussion')
					if(disc.size()>0){
						var num_coms = disc.attr('num_coms');
						var com_cnt = disc.find('div.Comment').size();
						com_cnt = num_coms > com_cnt ? num_coms : com_cnt;
						switch(com_cnt){
							case 0:
								el.html('Reply');
								break;
							case 1:
								el.html('Show 1 comment');
								break;
							default:
								el.html('Show ' + com_cnt + ' comments' );
								break;
						}
						disc.remove();
					}
					return false;
				}
			);
		}
	);

