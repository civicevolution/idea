= render :template => 'shared/clear_sign_in_form.js'
:plain
	//console.log("Load the worksheet")
	var worksheet = $("#{escape_javascript(
		render( :partial => 'plan/tp_matrix', :locals => {:question => question, :questions => questions, :question_counter => question.order_id } )
	)}");

	worksheet.find('div.my_rating').addClass('js');
	worksheet.find('div.community_rating').removeClass('no_js');
	worksheet.attr('id',#{question.id});
	
	function scrollToElement(){
		var highlight = $('.highlight');
		//console.log("highlight.size(): " + highlight.size())
		if(highlight.size()>0){
			//console.log("scroll to")
			$.scrollTo(highlight,600);	
		}
	}
	setTimeout(scrollToElement,1000);

	setTimeout(init_worksheet,10)

	var question_summary = $('div.question_summary[id="#{question.id}"]');
	var q_link = question_summary.find('a.display_worksheet');
	
	//question_summary.find('div.talking_point_sec').replaceWith(worksheet);
	question_summary.find('div.talking_point_sec').hide(600);
	
	worksheet.hide();
	$('body').append(worksheet);

	
	setTimeout(
		function(){
			$('div.worksheet').css({top: 0, left: $('div.left_side').offset().left, width: $('div.left_side').width(), height: $('div.right_side').outerHeight()});
			worksheet.slideDown(800);
			$('div.talking_point_matrix').height( $(window).height() - 150 );
		},200
	);
	
	setTimeout(
		function(){
			// add New or edited to the TP in the worksheet
			this.find('div.talking_point_post_it').each(
				function(){
					var tp = $(this);
					var new_tp = $('tr.talking_point[tp_id="' + tp.attr('id') + '"]');
					if(new_tp.find('span.rate').size() == 1 ){
						tp.find('p.talking_point').prepend('<span class="rate">Rate: </span>');
					}else if(new_tp.find('span.edited').size() == 1 ){
						tp.find('p.talking_point').append('<span class="edited"> (edited)</span>');
					}
				}
			);
		}.bind(worksheet),200
	);
		
	$('div.talking_point_matrix').sortable({
		stop: function(event,ui){
			update_selected_tp_ids($(this));
		}
	});


	function update_selected_tp_ids($matrix){
		temp.matrix= $matrix;
		console.log("update_selected_tp_ids")
		var question_id = $matrix.closest('.worksheet').attr('id');
		var tp_ids = $matrix.attr('selected_tp_ids');
		//var new_ids = $matrix.sortable('toArray').toString();
		var new_ids = [];
		$matrix.find('div.talking_point_post_it.selected').each(
			function(){
				new_ids.push(this.id);
			}
		);
		new_ids = new_ids.join(',');
		console.log("new_ids: " + new_ids);
		
		if(tp_ids == new_ids){
			//console.log("Curated_tp_ids hasn't changed, do not send");
		}else{
			console.log("Send these ids to the server: " + new_ids + " for question_id: " + question_id);
			$.post('/questions/' + question_id + '/curate_tps', {tp_ids: new_ids}, 
				function(){
					$matrix.attr('selected_tp_ids', new_ids);
				}, 
				"script"
			);
		}
		$matrix.sortable('refresh');
		//tp_delete_hover( question_id );
	}
	
	$('div.visibility').die('click').live('click',
		function(){
			var post_it = $(this).closest('div.talking_point_post_it');
			var $matrix = post_it.closest('div.talking_point_matrix');
			if($matrix.size()==0){
			
			
			}else{
				if(post_it.hasClass('selected')){
					post_it.removeClass('selected');
					update_selected_tp_ids($matrix);
				}else{
					post_it.addClass('selected');
					update_selected_tp_ids($matrix);
				}
			}
		}
	);
