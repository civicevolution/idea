%style
	:sass
		p.details
			margin: 0

		table.endorsements
			td
				vertical-align: top
				p
					margin-top: 0
		.stripe
			background-color: #ddd

		@media print	
			body
				width: 100%
				margin: 0 
				float: none	

			.page-break
				page-break-before: always

			p.no_themes
				font-style: italic
				margin-left: 20px
				margin-bottom: 2em	
			p.participant
				margin: 0 0 .5em 0
			div.no_print
				display: none
			h4.question
				margin-left: 1.9em
				text-indent: -1.9em
			ul
				margin-left: .5em
				li.theme
					list-style-type: none

		@media screen
			body
				width: 600px
				margin: 2em
				div.page
					width: 600px
			div.summary
				margin: 0 40px 0 40px
			ul
				margin-bottom: 0
				li	
					font-size: 1em
			p.no_themes
				font-style: italic
				margin-left: 20px
				margin-bottom: 2em	

			div.participants
				margin-bottom: 4em
			p.participant
				margin: 0 0 .5em 0
			h4.question
				margin-left: 1.9em
				text-indent: -1.9em
			ul
				margin-left: .5em	
				li.theme
					list-style-type: none
		



%div.proposal_page
	%div.no_print
		%button{:onclick=>'window.print();'} Print this page



	%div.intro
		%h2.home_title 
			%span #{team.title}
			
		%p.details Project coordinator: #{@team.organizer.first_name} #{@team.organizer.last_name}	
		%p.details Created: #{team.created_at.strftime("%m/%d/%Y")}

		%h3 Executive summary
		%div.summary
			:markdown
				#{@team.solution_statement}

	- team.question_ideas.sort {|a,b| a.order_id <=> b.order_id }.each do |question|
		%h4.question
			Q#{question.order_id}: #{question.text}
		
		- if question.themes.detect{|t| t.visible && t.version > 0}.nil?
			%p.no_themes No answer has been provided for this question
		- else
			%ul.talking_points.themes
				- question.themes.sort {|a,b| a.order_id <=> b.order_id }.each do |theme|
					- if theme.version > 0 && theme.visible
						%li.theme.talking_point{id: theme.id}
							:markdown
								#{theme.text}

%div.page-break
	%h3 #{@endorsements.size} Endorsements
	
	%table.endorsements
		%tr
			%th Name
			%th Comment
			%th When
		- @endorsements.each do |e|
			%tr{:class=> cycle('','stripe'), :id=>e.member.ape_code}
				%td.name
					%span.member& #{e.member.first_name} #{e.member.last_name}
				%td.text= simple_format( e.text )
				%td.time
					%abbr.timeago{:title=>e.updated_at}= time_ago_in_words(e.updated_at) + ' ago'

%div.page-break
	%h3 Proposal development details

	%h4 This proposal was developed by 
	%div.participants
		%p #{team.organizer.first_name} #{team.organizer.last_name}, who initially suggested this idea for change, working with
		- team.participants.select{|p| p.id	!= team.org_id}.sort{|x,y| x.first_name <=> y.first_name || x.last_name <=> y.last_name}.each do |participant|
			%p.participant
				= participant.first_name
				= participant.last_name
	
	
	
	%h4 Participation statistics for developing this proposal
	%table
		%tbody
			%tr.stripe
				%td Participants
				%td= team.participants.size
			%tr
				%td Endorsements
				%td= @endorsements.size
				
			- if team.stats
				-	PARTICIPATION_EVENT_POINTS.values.find_all{|pep| pep['summary_order'] && pep['summary_order'].to_i != 0}.sort{|a,b| a['summary_order'].to_i<=>b['summary_order'].to_i}.each do |stat|
					%tr{:class=>cycle('','stripe')}
						%td= stat['summary_title'].pluralize.capitalize
						%td= team.stats[stat['col_name']]
						-#= pluralize(team.stats[stat['col_name']], stat['summary_title']) 					
