%div.plus_com
	%div{:class=>'entry Question_entry'}
		%div.question
			%span.cap_q Q:
			= question.text
		%div.tabs.question_tabs
			%ul
				%li
					%a{:href=>"#tabs#{item.id}-1"} Team discussion
				%li
					%a{:href=>"#tabs#{item.id}-2"} Public comments
				%li
					%a{:href=>"#tabs#{item.id}-3"} Brainstorming
				%li
					%a{:href=>"#tabs#{item.id}-4"} Answer

			%div.tab_window.team.discussion{:id=>"tabs#{item.id}-1"}
				%div.question_discussion.tab_view{:id => "#{question.id}"}
					%div.inner_question_discussion
						%p.instr Your team should discuss this question here
						%ul.instr
							%li Your goal is to discuss this question, brainstorm ideas about it, and develop an answer
							%li You start by discussing the question on this page
							%li You can also discuss specific brainstorm ideas and answers in their pages
							%li All comments posted under ideas and answers will also appear in this page
							%li Please rate each comment to indicate how helpful it was - did it help the team explore and understand the question. Remember, it can be helpful even if you don't agree with it.
							%li There are discussion, brainstorming, and answer pages for each question in your proposal, so please try to stay focused on the question at hand
							%li.close_instr
								= link_to 'Hide instructions', {}, {:class => 'hide_instr'} 
							
						%p.discussion_links
							= link_to "Open all comments", {}, {:class => 'open_all'}
							-# = link_to "Load older comments", {}, {:class => 'load_older'}
						-# items_child_sorted = @items.find_all {|it| it.par_id == i.id && it.sib_id == 0 }.sort {|a,b| a.order <=> b.order }
						- items_child_sorted = @items.find_all {|it| it.par_id == item.id && it.sib_id == 0 && it.o_type == 3 }.sort {|a,b| a.order <=> b.order }
						- items_child_sorted.each do |i|
							= render_item(i,{3=>'show'})
						= render(:partial => 'add_comment_combined', :locals => { :id => item.id, :label=>'Please add your comment'})
		
			%div.tab_window.public.discussion{:id=>"tabs#{item.id}-2"}
				- pub_disc_item = @items.detect {|i| i.par_id == item.id && i.o_type == 11 } 
				- if pub_disc_item.nil?
					%p Public discussion is disabled for this page
				- else 
					%div.item{:id=>"i#{pub_disc_item.id}", :item_id=>pub_disc_item.id, :class=>'pub_coms'}
						%div.question_comments.tab_view{:id => "#{question.id}"}
							%div.inner_question_discussion

								%p.instr These are public comments about your team's proposal
								%ul.instr
									%li The Questions and Answers you are developing also appear on a separate public page
									%li 
										The public can 
										%b only
										read the questions and answers, they 
										%b cannot
										read your team discussion or brainstorming
									%li We hope you can benefit from public feedback as you develop your proposal
									%li 
										Remember, a successful proposal must be supported by the community - getting this
										feedback is a great place to start
									%li We strongly recommend that all team members review the public comments
									%li You can reply back to these comments if you like, by that is not necessary
									%li.close_instr
										= link_to 'Hide instructions', {}, {:class => 'hide_instr'} 
								
								
								%p.discussion_links
									= link_to "Open all comments", {}, {:class => 'open_all'}

								- items_child_sorted = @items.find_all {|it| it.par_id == pub_disc_item.id && it.sib_id == 0 && it.o_type == 3 }.sort {|a,b| a.order <=> b.order }
								- items_child_sorted.each do |i|
									= render_item(i,{3=>'show'})
								= render(:partial => 'add_comment_combined', :locals => { :id => pub_disc_item.id, :label=>'Please add your comment'})
					
			%div.tab_window{:id=>"tabs#{item.id}-3"}
				%div.bs_ideas.tab_view{:id => "bs_ideas_#{question.id}", :criteria=>question.idea_criteria}
					%p.instr Your team should brainstorm ideas about this question and how to answer it
					%ul.instr
						%li Ideas remain anonymous, so don't be shy
						%li Quantity is much more important than quality, so share your ideas, you never know where they may lead
						%li Every team member is strongly encouraged to suggest their ideas
						%li The ideas will appear below in order of importance as rated by the team
						%li New ideas will appear at the top till you rate them
						%li.close_instr
							= link_to 'Hide instructions', {}, {:class => 'hide_instr'} 
						
				
					%table{:cellspacing=>0, :cellpadding=>0, :border=>0, :id=>"bs_ideas_#{question.id}"}
						%col.idea
						%col.my_rating
						- bs_ideas = @bs_ideas_with_ratings.find_all {|bsi| bsi.q_id.to_i == question.id }
						- must_vote = bs_ideas.find_all {|bsi| bsi.my_vote.nil? }.sort {|a,b| a.id <=> b.id }
						- rated = bs_ideas.find_all {|bsi| !bsi.my_vote.nil? }.sort {|a,b| x = b.average <=> a.average; x != 0 ? x : b.count <=> a.count; x != 0 ? x : a.id <=> b.id; }
						- bs_ideas = must_vote.concat(rated)
											
						- if bs_ideas.size > 0
							- bs_ideas.each do |bs_idea|
								%tr
									%td
										%div.bs_idea{:id=>"bs_#{bs_idea.id}"}
											= simple_format( auto_link( h(bs_idea.text), :all, :target => "_blank" ))
										%p.controls
											- if bs_idea.created_at > @last_ts
												%span.new._bs_idea New 
											= link_to 'Discuss', {:action => "add_comment", :id => bs_idea.id}, {:class => 'com_on_tgt idea'}
											- if bs_idea.member_id == session[:member_id]
												%span.edit
													= link_to 'Edit', {:action => "edit_bs_idea", :id=> bs_idea.id}, {:class => 'edit_bs_idea'}
											%abbr.timeago{:title=>bs_idea.created_at}= time_ago_in_words(bs_idea.created_at) + ' ago'	
											-#%span= bs_idea.id								

									%td.rating
										- if bs_idea.my_vote.to_i == 0
											%span.please_rate Please rate
										- else
											%span.team_rating
												avg: 
												%span.avg= bs_idea.average
												with 
												%span.cnt= bs_idea.count
												votes

										- form_tag( {:controller => 'team', :action => 'bs_rating'}, {:class => 'item_rater', :id => "item_rater_#{bs_idea.id}"}) do
											%span.stars
												- ANSWER_RATING_OPTIONS.sort.each do |value ,title|	
													- if value.to_i == bs_idea.my_vote.to_i
														%input.star{:class => 'item_rater', :name => "bs_rating_#{bs_idea.id}", :type => 'radio', :value => "#{value}", :title => "#{title}", :checked => 'true'}
													- else
														%input.star{:class => 'item_rater', :name => "bs_rating_#{bs_idea.id}", :type => 'radio', :value => "#{value}", :title => "#{title}"}
											%p.clear_both
											%span.star_hover
											%span.rating_results	
												my rating
								
						- else
							%tr.empty_table
								%td No ideas have been suggested yet. Please suggest one.

				- form_for( :bs_idea, :url => { :action => :create_brainstorm_idea}, :html => {:class=>'add_bs_idea_form'} ) do |form| 
					= form.hidden_field :question_id, :value => question.id
					= hidden_field_tag :mode, 'add'
					= hidden_field_tag :idea_id

					%div.add_idea
						= form.label :text, "Add a new idea for this question"
						= form.text_area :text, :class=>'comment', :size=>"1x2", :alias=>'Idea'
						%div.control_line
							%div.controls
								%span.char_ctr 
									= question.idea_criteria.match(/..(\d+)/)[1]
									characters left
								%button Save
								= link_to 'Clear', {:action => 'index'}, {:class=>'clear'}

	
			%div.tab_window{:id=>"tabs#{item.id}-4"}
				%div.answers.tab_view{:id => "#{question.id}", :criteria=>question.answer_criteria}
					- answers = @answers_with_ratings.find_all {|asi| asi.q_id.to_i == question.id }
					- must_vote = answers.find_all {|a| a.my_vote.nil? }.sort {|a,b| a.id <=> b.id }
					- rated = answers.find_all {|a| !a.my_vote.nil? }.sort {|a,b| x = b.average <=> a.average; x != 0 ? x : b.count <=> a.count; x != 0 ? x : a.id <=> b.id; }
					- answers = must_vote.concat(rated)
					- remaining_ans = question.num_answers - answers.length
					-#%p
					-#	num_answers allowed: 
					-#	= question.num_answers
					-#	, answers entered: 
					-#	= answers.length
					-#	, remaining: 
					-#	= remaining_ans
					- if question.num_answers == 1
						-if answers.length == 0
							%p.instr Your team needs to develop the single, best answer to this question
							%ul.instr
								%li Any team member can suggest an answer to this question
								%li Everyone on the team should discuss and rate the answer
								%li Everyone is encouraged to help improve the answer through discussing and editing the answer
								%li 
									Your team answer should reflect the consensus of the team, so keep discussing, brainstorming, and refining the answer till everyone is 
									%u reasonably
									satisfied
								%li.close_instr
									= link_to 'Hide instructions', {}, {:class => 'hide_instr'} 
									
							- show_ans = 1
						-else
							%p.instr Your team needs to develop the single, best answer to this question
							%ul.instr
								%li Everyone should review and discuss this answer
								%li Rate the answer to show your agreement
								%li
									%b If you have any concerns about the answer, discuss it with your team
								%li This answer belongs to the team, anyone can edit the answer
								%li 
									Your team answer should reflect the consensus of the team, so keep discussing, brainstorming, and refining the answer till everyone is 
									%u reasonably
									satisfied
								%li.close_instr
									= link_to 'Hide instructions', {}, {:class => 'hide_instr'} 
									
					- else
						-if answers.length == 0
							%p.instr Your team needs to develop one or more answers to this question
							%ul.instr
								%li Any team member can suggest an answer to this question
								%li Everyone on the team should discuss and rate the answers
								%li Everyone is encouraged to help improve the answers through discussing and editing the answer	
								%li 
									Your team answers should reflect the consensus of the team, so keep discussing, brainstorming, and suggesting and refining answers till everyone is 
									%u reasonably
									satisfied
								%li.close_instr
									= link_to 'Hide instructions', {}, {:class => 'hide_instr'} 
									
							- show_ans = 1
						- elsif remaining_ans <= 0
							%p.instr 
								Your team has reached the maximum number of answers(
								= question.num_answers
								) for this question
							%ul.instr
								%li Team members should continue to develop these answers
								%li Everyone on the team should discuss and rate the answers
								%li Everyone is encouraged to help improve the answers through discussing and editing the answer							
								%li
									%b If you have any concerns about the answer, discuss it with your team								 
								%li 
									Your team answers should reflect the consensus of the team, so keep discussing, brainstorming, and refining the answers till everyone is 
									%u reasonably
									satisfied
								%li.close_instr
									= link_to 'Hide instructions', {}, {:class => 'hide_instr'} 
									
							- show_ans = 0
						-else
							- if remaining_ans > 10
								%p.instr Your team can develop multiple answers to this question
							- elsif remaining_ans > 1
								%p 
									Your team can develop up to
									= remaining_ans
									more answers to this question
							- else
								%p.instr 
									Your team can add one more answer to this question
							%ul.instr
								%li Any team member can suggest an answer to this question
								%li Everyone on the team should discuss and rate the answers
								%li Everyone is encouraged to help improve the answers through discussing and editing the answer							
								%li 
									%b If you have any concerns about the answer, discuss it with your team
								%li 
									Your team answers should reflect the consensus of the team, so keep discussing, brainstorming, and suggesting and refining answers till everyone is 
									%u reasonably
									satisfied
								%li.close_instr
									= link_to 'Hide instructions', {}, {:class => 'hide_instr'} 
									
							- show_ans = 1

					-#%div.answers{:id => "answers_#{question.id}"}
					%div{:id => "answers_#{question.id}"}
						%table{:cellspacing=>0, :cellpadding=>0, :border=>0, :id=>"answers_#{question.id}"}
							%col.idea
							%col.my_rating
							- if answers.size > 0
								- answers.each do |answer|
									%tr
										%td
											%div.answer{:id=>"ans_#{answer.id}"}= simple_format( auto_link( h(answer.text), :all, :target => "_blank" ))
											%p.controls
												- if answer.created_at > @last_ts
													%span.new._answer New 
												- elsif answer.updated_at > @last_ts
													%span.new._updated._answer Updated 
													
												= link_to 'Discuss', {:action => "add_comment", :id => answer.id}, {:class => 'com_on_tgt answer'}
												%span.edit
													= link_to 'Edit', {:action => "edit_answer", :id=> answer.id}, {:class => 'edit_answer'}
												%abbr.timeago{:title=>answer.updated_at}= time_ago_in_words(answer.updated_at) + ' ago'	
												-#%span= answer.id								
												- if answer.ver.to_i == 1
													%span.version Original version
												- else
													%span.version
														Version #{answer.ver}
													= link_to "View history", {:action => "item_history", :id => answer.id}, {:class => 'view_history', :rel=> "/team/item_history/#{answer.id}"}

										%td.rating
											- if answer.my_vote.to_i == 0
												%span.please_rate Please rate
											- else
												%span.team_rating
													avg: 
													%span.avg= answer.average
													with 
													%span.cnt= answer.count
													votes

											- form_tag( {:controller => 'team', :action => 'answer_rating'}, {:class => 'item_rater'} ) do
												%span.stars
													- ANSWER_RATING_OPTIONS.sort.each do |value ,title|	
														- if value.to_i == answer.my_vote.to_i
															%input.star{:class => 'item_rater', :name => "bs_rating_#{answer.id}", :type => 'radio', :value => "#{value}", :title => "#{title}", :checked => 'true'}
														- else
															%input.star{:class => 'item_rater', :name => "bs_rating_#{answer.id}", :type => 'radio', :value => "#{value}", :title => "#{title}"}
												%p.clear_both
												%span.star_hover
												%span.rating_results	
													my rating

						- if show_ans == 1
							%div.answer_form
								= render(:partial => 'add_answer', :locals => { :question=>question })
					