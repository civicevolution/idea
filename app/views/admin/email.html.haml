- content_for (:script) do
	-#= javascript_include_tag "jquery-1.4.2.min.js", 'jquery.form.js', 'ce/activate/act_welcome_layout.js'
	:javascript
		
		$(function(){
			$('textarea').autogrow({
				lineHeight : 16,
				minHeight  : 128,
				maxHeight : 500
			});			
		});
		
		$('form :button').die('click').live('click',
			function(){
				console.log("form button send")
				try{
					send_email($(this.form));
				}catch(e){console.log("send_email v1 error: " + e)}
				return false;
			}
		);
		$('form').die('submit').live('submit',
			function(){
				console.log("form send")
				//try{
				//	send_email($(this));
				//}catch(e){console.log("send_email v2 error: " + e)}
				return false;
			}
		);
		$('form a.cancel').die('click').live('click',
			function(){
				console.log("cancel preview")
				try{
					$('div.compose').show();
					$('div.email_preview').html('');
					$('div.preview').hide();
					$('input.act').val('preview');
				}catch(e){console.log("cancel preview v2 error: " + e)}
				return false;
			}
		);

		$('form a.clear').die('click').live('click',
			function(){
				$(this).closest('form').find('textarea').val('');
				return false;
			}
		);
		
		
		
		function send_email(form){
			var btn = $('button',form);
			//btn.attr('disabled',true).after('<img src="/images/rotating_arrow.gif"/>')
			console.log("do send_email")
			$(':input',form).removeClass('form_error_border');
			$('p.form_error_text',form).remove();
       
			form.ajaxSubmit({ 					
			  type: "POST", 
				url: 'http://' + document.location.host + '/admin/email',
			  success: function(data,status){ 
					console.log("send_email submit success btn: " + btn.attr('class') );
					btn.removeAttr('disabled').next('img').remove();
					//debugger
					if( $('input.act').val() == 'fetch_recipients' ){
						$('div#recipients').html(data)
					
					}else if( $('input.act').val() == 'preview' ){
						console.log("act is preview")
						$('div.compose').hide();
						$('div.email_preview').html(data);
						$('div.preview').show();
						$('input.act').val('send')
					}else if ( $('input.act').val() == 'send' ){
						var dialog = $('<div>' + data + '</div>').dialog( {title : 'Success', modal : true } )
						$('input.act').val('preview');
						$('div.compose').show();
						$('div.email_preview').html('');
						$('div.preview').hide();
					}
					
					
			  },
				error : function(xhr,errorString,exceptionObj){
					if(xhr.responseText == 'no member found'){
						document.location.reload()
					}else{
						console.log("Error confirm_reg_captcha, xhr: " + xhr.responseText)
						Recaptcha.reload();
						$('<p>Please try again - <a href="#" class="reload_captcha">Show new text</a></p>').addClass('form_error_text').insertBefore(btn)
						btn.removeAttr('disabled').next('img').remove();
					}
				}
			});			
		  return false;
		}
		$('a.select_all').die('click').live('click',
			function(){
				$('div#recipients :checkbox').attr('checked','true');
				return false;
			}
		)
		$('a.unselect_all').die('click').live('click',
			function(){
				//$('div#recipients :checkbox').attr('checked','true');			
				$('div#recipients :checkbox').removeAttr('checked');
				return false;
			}
		)
	
		$('select#scenario').die('change').live('change',
			function(){
						$('div#compose').load('/admin/email',{act:'fetch_scenario', scenario: $('select#scenario').val()})
			}
		)
		$('select#version').die('change').live('change',
			function(){
				$('div#compose').load('/admin/email',{act:'fetch_version', scenario: $('select#scenario').val(), version: $('select#version').val()})
			}
		)
		$('select#recipient_source').die('change').live('change',
			function(){
				console.log("load recipients")
				if( $('select#recipient_source').val() == 'search'){
					// open the search form
					$('p.search_data').show()
				}else{
					$('p.search_data').hide()
					$('div#recipients').load('/admin/email',{act:'fetch_recipients', recipient_source: $('select#recipient_source').val()})
				}
			}
		)
		$('select#team').die('change').live('change',
			function(){
				console.log("load team members")
				$('div#team_members').load('/admin/email',{act:'fetch_recipients', recipient_source: 'team_id-' + $('select#team').val()})
			}
		)
		$('input.search').die('click').live('click',
			function(){
				console.log("search for members")
				//$('div#team_members').load('/admin/email',{act:'fetch_recipients', recipient_source: 'team_id-' + $('select#team').val()})
				$('div#recipients').load('/admin/email',{act:'fetch_recipients', recipient_source: $('select#recipient_source').val(), search: $('input.search_phrase').val() })
				return false
			}
		)
		
		
		
	%style
		:sass
			div.email_preview
				border: 1px solid black
				padding: 10px
			div.preview
				display: none
			input.subject
				width: 400px
			form.std_form
				input.version
					width: 50px	
				input.scenario
					width: 150px
				p.save_scenario
					clear: both
					margin:	10px 0 10px 0
			input.search_phrase
				width: 200px
			p.search_data
				display: none


%h3 Send email to participants
- logger.debug "html @recipients: #{@recipients}"
- if @recipients.nil?
	- logger.debug "@recipients.nil? is true"
	-# form_tag( { :action => :email}, {:class=>'std_form'} ) do
		-#= hidden_field_tag :act, 'fetch_recipients', {:class=>'act'}
	-# queries = [ ["Select recipients class", -1],["Choose team", 0],["Search members",9],["Registered - no team 2029" ,  1],["Team not launched 2029", 2],["Team - no comment yet 2029", 3],["Team and commented 2029", 4],["Registered - no team CGG" ,  5],["Team not launched CGG", 6],["Team - no comment yet CGG", 7],["Team and commented CGG", 8] ]
	- queries = [ ["Select recipients class", -1],["Choose team", "team"],["Search members","search"], ['join a team','join a team'], ['invite members','invite members'], ['introduce yourself','introduce yourself'], ['add new comment','add new comment'], ['add ideas','add ideas'], ['encourage teammates','encourage teammates'], ['joined a team', 'joined a team'],['Commented','commented'], ['all 2029', 'all 2029']	]	
	
	%p 
		= select_tag( :recipient_source, options_for_select(queries, -1))	
	%p.search_data 
		= text_field_tag :search_phrase, nil, {:class=>"search_phrase"}
		%input.search{:value=>'Search', :type=>'button'}
-#- else
- logger.debug "@recipients.nil? is false"
- logger.debug "email: #{@cta_email.inspect}"
- form_tag( { :action => :email}, {:class=>'std_form'} ) do
	= hidden_field_tag :act, 'preview', {:class=>'act'}

	%hr
	%div#recipients
		%p No recipients selected
	%hr
	%div#compose
		= render :partial=> 'email_compose', :locals=>{:cta_email=>@cta_email}