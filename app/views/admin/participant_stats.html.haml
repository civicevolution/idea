- content_for (:script) do
	= javascript_include_tag "jquery.tablesorter.min.js"
	:javascript
		$(function() {
		    // add new widget called indexFirstColumn
		    $.tablesorter.addWidget({
		        // give the widget a id
		        id: "indexFirstColumn",
		        // format is called when the on init and when a sorting has finished
		        format: function(table) {                               
		                // loop all tr elements and set the value for the first column  
		                for(var i=0; i <= table.tBodies[0].rows.length; i++) {
		                        $("tbody tr:eq(" + (i - 1) + ") td:first",table).html(i);
		                }                                                               
		        }
		    });

				$("#team_members").tablesorter( {widgets: ['zebra','indexFirstColumn'] });
				$("#members").tablesorter( {widgets: ['zebra','indexFirstColumn'] }); 
		});
	%style
		:sass
			div.page
				width: auto
			table td 
				padding: 3px
			table tr.odd td
				background: #e6f2ff
			span.sort_time
				width: 20px
				display: none
			td.title 
				max-width: 200px
					

%h3 Members for #{@initiative.title}
%p Click columns to sort

%table#team_members{:class=>"tablesorter"}
	%thead
		%tr
			%th #
			%th Team
			%th Mems
			%th Joined
			%th v^
			%th Live
			%th Name
			%th Coms
			%th Ideas
			%th Answers
			%th Visits
			%th Last visit
			%th v^
			%th Last com
			%th v^
			%th Scenario
			%th CTA time
			%th v^
			%th Next CTA
			
			
	%tbody			
		- @team_stats.each do |m|
			%tr
				%td
				%td.title= m['title']
				%td= m['num_mem']
				%td= time_ago_in_words(m['join_ts']) + ' ago' unless m['join_ts'].nil?
				%td
					%span.sort_time= m['join_ts'].nil? ? 0 : Time.parse(m['join_ts']).to_i
				%td= m['launched'] == 't' ? 'Live' : 'No'
				%td= "#{m.first_name} #{m.last_name}"
				%td= m['coms']
				%td= m['ideas']
				%td= m['ans']
				%td= m['visits']
				%td= time_ago_in_words(m['last_visit']) + ' ago' unless m['last_visit'].nil?
				%td
					%span.sort_time= m['last_visit'].nil? ? 0 : Time.parse(m['last_visit']).to_i
				%td= time_ago_in_words(m['last_com']) + ' ago' unless m['last_com'].nil?
				%td
					%span.sort_time= m['last_com'].nil? ? 0 : Time.parse(m['last_com']).to_i
				%td= m['scenario']
				%td= time_ago_in_words(m['cta_time']) + ' ago' unless m['cta_time'].nil?
				%td
					%span.sort_time= m['cta_time'].nil? ? 0 : Time.parse(m['cta_time']).to_i
				%td
				
%h3 Members without a team
%table#members{:class=>"tablesorter"}
	%thead
		%tr
			%th #
			%th In
			%th Name
			%th Reg.
			%th v^
			%th Coms
			%th Visits
			%th Last visit
			%th v^
			%th Scenario
			%th CTA time
			%th v^
			%th Next CTA
			%th email
						
	%tbody			
		- @no_team.each do |m|
			%tr
				%td
				%td= m['initiative_id']
				%td= "#{m.first_name} #{m.last_name}"
				%td= time_ago_in_words(m['registered']) + ' ago' unless m['registered'].nil?
				%td
					%span.sort_time= m['registered'].nil? ? 0 : Time.parse(m['registered']).to_i
				%td= m['coms']
				%td= m['visits']
				%td= time_ago_in_words(m['last_visit']) + ' ago' unless m['last_visit'].nil?
				%td
					%span.sort_time= m['last_visit'].nil? ? 0 : Time.parse(m['last_visit']).to_i
				%td= m['scenario']
				%td= time_ago_in_words(m['cta_time']) + ' ago' unless m['cta_time'].nil?
				%td
					%span.sort_time= m['cta_time'].nil? ? 0 : Time.parse(m['cta_time']).to_i
				%td
				%td= m['email']
