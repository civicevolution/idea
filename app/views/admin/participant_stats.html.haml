- content_for (:script) do
	= javascript_include_tag "jquery.tablesorter.min.js"
	:javascript
		$(function() {
			// add new widget called indexFirstColumn
			$.tablesorter.addWidget({
			    // give the widget a id
			    id: "indexFirstColumn",
			    // format is called when the on init and when a sorting has finished
			    format: function(table) {                               
			            // loop all tr elements and set the value for the first column  
			            for(var i=0; i <= table.tBodies[0].rows.length; i++) {
			                    $("tbody tr:eq(" + (i - 1) + ") td:first",table).html(i);
			            }                                                               
			    }
			});

			$("#team_members").tablesorter( {widgets: ['zebra','indexFirstColumn'] });
			$("#members").tablesorter( {widgets: ['zebra','indexFirstColumn'] }); 
			
			$('table.tablesorter tr').die('click').live('click',
				function(e){
					ids = this.id.split('-');
					member_id = ids[0]
					team_id = ids[1]
					//console.log("click on row member_id: " + member_id + ", team_id: " + team_id)
					//console.log("x: " + e.pageX + ", y: " + e.pageY)
					var dialog = $('<div id="select_cta"><div>').dialog( {title : false, modal : true, position : [e.pageX,e.pageY - pageYOffset - 50] } )
					$('div#select_cta').load('/call_to_action/load_cta_options',{member_id:member_id, team_id: team_id})
					dialog.siblings('div.ui-dialog-titlebar').remove();
					
				}
			)
			
			$(':radio').die('click').live('click',
				function(e){
					var el = $(this)
					ids = el.closest('table').attr('id').split('-');
					member_id = ids[0]
					team_id = ids[1]
					scenario = el.val()
					console.log("clicked on scenario: " + scenario + " for member_id: " + member_id + " and team_id: " + team_id)
					// submit to the server
					
					$.ajax	({ 					
					  type: "POST", 
						url: 'http://' + document.location.host + '/call_to_action/save_to_queue',
						data: {member_id: member_id, team_id: team_id, scenario: scenario},
					  success: function(data,status){ 
							console.log("/call_to_action/save_to_queue submit success");
							//debugger
							$('tr#' + member_id + '-' + team_id).find('td:last').html(data)
							el.closest('div.ui-dialog').dialog('destroy').remove();

					  },
						error : function(xhr,errorString,exceptionObj){
							console.log("error updating call to action")
						}
					});			
				  return false;
				}
			)
		});
	%style
		:sass
			div.page
				width: auto
				margin-bottom: 200px
			table td 
				padding: 3px
			table tr.odd td
				background: #e6f2ff
			span.sort_time
				width: 20px
				display: none
			td.title 
				max-width: 200px
					

%h3 Members for #{@initiative.title}
%p Click columns to sort

%table#team_members{:class=>"tablesorter"}
	%thead
		%tr
			%th #
			%th Team
			%th Mems
			%th Joined
			%th v^
			%th Live
			%th Name
			%th Coms
			%th Ideas
			%th Answers
			%th Visits
			%th Last visit
			%th v^
			%th Last com
			%th v^
			%th Scenario
			%th CTA time
			%th v^
			%th Next CTA
			
			
	%tbody			
		- @team_stats.each do |m|
			%tr{:id=>"#{m['id']}-#{m['team_id']}"}
				%td
				%td.title= m['title']
				%td= m['num_mem']
				%td= time_ago_in_words(m['join_ts']) + ' ago' unless m['join_ts'].nil?
				%td
					%span.sort_time= m['join_ts'].nil? ? 0 : Time.parse(m['join_ts']).to_i
				%td= m['launched'] == 't' ? 'Live' : 'No'
				%td= "#{m.first_name} #{m.last_name}"
				%td= m['coms']
				%td= m['ideas']
				%td= m['ans']
				%td= m['visits']
				%td= time_ago_in_words(m['last_visit']) + ' ago' unless m['last_visit'].nil?
				%td
					%span.sort_time= m['last_visit'].nil? ? 0 : Time.parse(m['last_visit']).to_i
				%td= time_ago_in_words(m['last_com']) + ' ago' unless m['last_com'].nil?
				%td
					%span.sort_time= m['last_com'].nil? ? 0 : Time.parse(m['last_com']).to_i
				%td= m['scenario']
				%td= time_ago_in_words(m['cta_time']) + ' ago' unless m['cta_time'].nil?
				%td
					%span.sort_time= m['cta_time'].nil? ? 0 : Time.parse(m['cta_time']).to_i
				%td= m['next_scenario']
				
%h3 Members without a team
%table#members{:class=>"tablesorter"}
	%thead
		%tr
			%th #
			%th In
			%th Name
			%th Reg.
			%th v^
			%th Coms
			%th Visits
			%th Last visit
			%th v^
			%th Scenario
			%th CTA time
			%th v^
			%th email
			%th Next CTA						
			
	%tbody			
		- @no_team.each do |m|
			%tr{:id=>"#{m['id']}-#{m['initiative_id']}"}
				%td
				%td= m['initiative_id']
				%td= "#{m.first_name} #{m.last_name}"
				%td= time_ago_in_words(m['registered']) + ' ago' unless m['registered'].nil?
				%td
					%span.sort_time= m['registered'].nil? ? 0 : Time.parse(m['registered']).to_i
				%td= m['coms']
				%td= m['visits']
				%td= time_ago_in_words(m['last_visit']) + ' ago' unless m['last_visit'].nil?
				%td
					%span.sort_time= m['last_visit'].nil? ? 0 : Time.parse(m['last_visit']).to_i
				%td= m['scenario']
				%td= time_ago_in_words(m['cta_time']) + ' ago' unless m['cta_time'].nil?
				%td
					%span.sort_time= m['cta_time'].nil? ? 0 : Time.parse(m['cta_time']).to_i
				%td= m['email']
				%td= m['next_scenario']
