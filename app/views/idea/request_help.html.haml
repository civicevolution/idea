- if @member.id == 0
	- @member.first_name = @member.last_name = ''
%div#request_help
	%div.help_intro
		%img{:src=>'/assets/help_bs.jpg', :class=>"me"}	
		%h3 How can I help you?
		%p I'm Brian Sullivan, the developer of CivicEvolution and I am committed to helping citizens make change in their community
		%p Your ideas and community are important and we very much appreciate your participation, commitment, and patience

		%p 
			Have you watched the
			%a{:rel=>'prettyPhoto', :href=>'http://vimeo.com/22311078', :title=>'2029 CivicEvolution Demo', :id=>'play_intro_video', :target=>'_blank'}  
				new Introduction video?
			Or
			= link_to "read about it", {:controller=> 'welcome', :action=>'intro'}, {:target=>'_blank'} 

	= form_for :request_help, :url => { :action => :request_help_post}, :html=> {:class=>'request_help std_form' } do |form| 
		%p
			= form.select( :category,[['Please select the assistance you need',0],['Report a bug',1],['I need help using CivicEvolution',2],['I need assistance with my proposal',3],['I need help dealing with my fellow participants',4],['I need technical assistance with my proposal',5],['I have a suggestion',6]])
	
		%div{:class=> @member.id != 0	? 'hide' : ''}
			= form.label :name, "Your name:"
			= form.text_field :name, :value=>"#{@member.first_name} #{@member.last_name}"
   
			= form.label :email, "Your email:"
			= form.text_field :email, :value=>@member.email
	
		%p Please provide a clear message about the assistance you require
		%div
			= form.text_area :message, :cols=>1, :rows=>1
		%div.control_line
			%div.controls
				%span.char_ctr 
					1000
					characters
	
		%p	
			%button
				Send
			= link_to 'Cancel', {:action => 'index'}, {:class=>'cancel'}


:javascript
	//console.log("javascript for activate_request_help_form");

	function activate_request_help_form(form){
		//console.log("activate_request_help_form");
		$('textarea, input[type="text"]',form).val('');
		$('select',form).val(0);
		
		activate_text_counters_grow( $('textarea',form),100 );
		
		$('a.cancel',form).click(
			function(){
				try{
					console.log("Cancel email_participants_form");
					$(this).closest('div.ui-dialog').dialog('destroy').remove();
				}catch(e){
					console.log("activate request_help_form cancel error: "+ e)
				}
				return false;
			}
		);
		
		$(':submit', form).click(
			function(){
				//var msg = form[0].message.value;
				//msg = msg.replace(/^\s+/,'').replace(/\s+$/,'')

				var sel = form.find('select')[0];
				var cat_id = sel.selectedIndex;
				if(cat_id == 0){
					$(sel).addClass('form_error_border').before('<p class="form_error_text">Please select the assistance you need</p>')
					return false;
				}

				var btn = $('button',form);
				btn.attr('disabled',true).after('<img src="/assets/rotating_arrow.gif"/>');
				$(':input',form).removeClass('form_error_border');
				$('p.form_error_text',form).remove();

				if(form.find('textarea').val()!=''){
					form.ajaxSubmit({ 					
					  type: "POST", 
					  url: "/idea/request_help_post", 
						data: {user_agent : navigator.userAgent, url: document.location.href, error_log : 'no log recorded', load_time: 0  },
					  success: function(data,status){ 
							//console.log("chat submit success, call dispatchPageChatMessage");
							var dialog = $('<div>' + data + '</div>').dialog( {title : 'Thank you', modal : true, width: 500 }); 
							form.closest('div.ui-dialog').dialog('destroy').remove();
					  },
						error : function(xhr,errorString,exceptionObj){
							console.log("Error, xhr: " + xhr.responseText)
							try{
								show_form_error(form, xhr.responseText);
								btn.removeAttr('disabled').next('img').remove()
							}catch(e){
								btn.removeAttr('disabled').next('img').remove()
								console.log("Chat submit error: " + e)
								$('<div><p>Sorry, we cannot process your help request at this time. We have been notified of this error and we will look into it soon.</p><p>Please email us directly support@civicevolution.org</p></div>').dialog( {title : 'Warning', modal : true } )
							}
						}
					});
					return false;			
				}
			}	
		)
	}
