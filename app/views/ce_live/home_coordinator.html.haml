- content_for(:script) do
	%style
		:sass
			div.session_details
				margin-left: 20px
			body
				width: 700px
			.nobreak
				white-space: nowrap
			h3.time
				margin-right: 20px
			p.report_link
				font-size: 1.2em
				
	:javascript
		var live_session_id;
		$('a.publish_link').die('click').live('click',
			function(){
				var link = $(this);
				live_session_id = link.attr('id');
				if(link.hasClass('unpublished')){
					var new_publish_status = true;
				}else{
					var new_publish_status = false;
				}
				post_theme_changes({act: 'publish_session_themes', new_publish_status: new_publish_status });
				return false;
			}
		);
		
%div#live_home
	%h2 CivicEvolution Live Coordinator Homepage
	
	= link_to "Event setup", live_event_setup_path(@live_node.live_event_id)
	%table
		- @sessions.each do |session|
			- if !session.source_session_id.nil?
				- session_source = LiveSession.find_by_id(session.source_session_id)
		
			%tr
				%td
					%h3.time
						= session.starting_time.strftime("%H:%M") unless session.starting_time.nil?
				%td
					%h3
						= session.name
				%td
					%h3
						%span.nobreak= "(#{session.duration} min)" unless session.duration.nil?
		
			%tr
				%td
				%td{:colspan=>2}
	
					%div.session_details
						- case session.session_type
							- when 'collect'
								%p 
									%b Theme teams
								%ul
									- @subordinate_themers.each do |themer|
										%li= link_to "Themer's view, Tables: #{themer[:tables]}", live_themer_path(:session_id=>session.id, :id=>themer.id)
					
								%p= link_to "Coordinator's theming", live_theme_coordination_path(session.id)
								%p= link_to "Final editing of themes", live_theme_final_edit_path(session.id)
				
								- if session.published
									%h4
										%span.status 
											= image_tag 'completed_on.gif'
											Themes have been published
										= link_to "Unpublish the themes", {}, {:class=>"publish_link published", :id=>session.id}
								- else
									%h4 
										%span.status Themes have not been published
										= link_to 'Publish themes', {}, {:class=>"publish_link unpublished", :id=>session.id}

				
							- when 'feedback_themes'
								- if !session.source_session_id.nil?
									- if !session_source.published
										%p.warn Themes have not been published yet
									
									%p= link_to "#{session.name}", live_session_themes_path(session.source_session_id)
								- else
									%p.warn Please set the session data source in Event setup page
							- when 'allocation_options'
								- if !session.source_session_id.nil?
									- if !session_source.published
										%p.warn Themes have not been published yet
									
									%p= link_to "#{session.name}", live_session_allocation_options_path(session.source_session_id)
								- else
									%p.warn Please set the session data source in Event setup page
							- when 'allocation'
								- if !session.source_session_id.nil?
									- if !session_source.published
										%p.warn Themes have not been published yet
									
									%p= link_to "#{session.name}", live_session_allocation_voting_path(session.source_session_id)
								- else
									%p.warn Please set the session data source in Event setup page
							- when 'feedback_allocation_results'
								- if !session.source_session_id.nil?
									- if !session_source.published
										%p.warn Themes have not been published yet
									
									%p= link_to "#{session.name}", live_session_allocation_results_path(session.source_session_id)
								- else
									%p.warn Please set the session data source in Event setup page
			
