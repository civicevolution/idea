:plain
	//clearTimeout(post_theme_changes_ack_waiting);
	console.log("your theme update has been processed: post_theme.js")

- if params[:act] == 'new_list' && @live_theme.theme_type == 1
	:plain
		// return the json for the new column and instantiate it
		var data = { data: { id: #{@live_theme.id}, theme_id: #{@live_theme.id}, theme_text: #{BlueCloth.new( @live_theme.text ).to_html.to_json}, theme_idea_id: #{params[:idea_id]}, theme_idea: #{LiveTheme.find(params[:idea_id]).text.to_json}, theme_idea_themer_id: #{LiveTheme.find(params[:idea_id]).themer_id} } };
		realtime_data_update_functions['live_new_macro_theme']( data );
	
- elsif params[:act] == 'new_list' && @live_theme.theme_type == 0
	:plain
		// return the json for the new column and instantiate it
		var data = { data: { id: #{@live_theme.id}, theme_id: #{@live_theme.id}, theme_text: #{BlueCloth.new( @live_theme.text ).to_html.to_json}, theme_idea_id: #{params[:idea_id]}, theme_idea: #{LiveTalkingPoint.find(params[:idea_id]).text.to_json}, theme_idea_group_id: #{@live_talking_point.group_id} } };
		realtime_data_update_functions['live_new_theme']( data );
		
- elsif params[:act] == 'update_final_theme_order'
	:plain
		$('ul.themes').attr('id_order', '#{@new_ids}')
		$('p.saving_modal').closest('div.ui-dialog').dialog('destroy').remove();
- elsif params[:act] == 'update_theme_text_and_example'
	:plain
		update_new_theme( '#{ params[:theme_id].match(/\d/).nil? ? 'insert' : 'replace' }', #{params[:form_id]}, #{@live_theme.to_json} )
- elsif params[:act] == 'publish_session_themes'
	:plain
		var link = $('a.publish_link[id="#{params[:live_session_id]}"]');
		if( #{params[:new_publish_status] =='true'} ){
			link.parent().find('.status').html('<img alt="Completed_on" src="/assets/completed_on.gif">Themes have been published');
			link.html('Unpublish themes');
			link.removeClass('unpublished').addClass('published')
		}else{
			console.log("mark as inpublished");
			link.parent().find('.status').html('Themes have not been published');
			link.html('Publish themes');
			link.removeClass('published').addClass('unpublished')
		}
- elsif params[:act] == 'delete_theme_child'  
	:plain
		console.log("remove from parent is ok");
		var removed_post_it = $('div.post-it[id="#{params[:idea_id]}"]').closest('li').remove();
		if(!removed_post_it.hasClass('deleted')){
			$('div.unthemed_ideas ul.sortable_ideas').append(removed_post_it);
		}
- elsif params[:act] == 'delete_theme'
	:plain
		if(#{!@remove_theme_id.nil?}){
			//console.log("remove list with id: #{@remove_theme_id}");
			$('div.theme_col[id="#{@remove_theme_id}"]').remove();
		}
