- content_for(:script) do
	%style
		:sass
			p.data_source
				label
					display: inline
				input[type='text']
					width: 40px
					

%div#add_session_form
	%h3 Add/edit a session form
	
	= form_for( @live_session, :url=>post_live_session_path(params[:event_id]), :html=>{:class=>'std_form'} ) do |form|
		= form.hidden_field :id
		%p= label_tag :order_id, 'Session order #'
		= form.text_field :order_id

		%p= label_tag :starting_time, 'Starting time'
		= form.text_field :starting_time

		%p= label_tag :duration, 'Duration in minutes'
		= form.text_field :duration
		
		%div
			%p= label_tag :title, 'Session type'
			%p.data_source
				= form.select( :session_type, [['Select session type','0'],['Collect talking points','collect'],['Feedback: themes', 'feedback_themes'], ['Allocation options', 'allocation_options'], ['Allocation', 'allocation'], ['Feedback: Allocation results','feedback_allocation_results']])
				= label_tag :source_session_id, 'Session id for data (if applicable)'
				= form.text_field :source_session_id
					
		%div
			%p= label_tag :title, 'Session name'
			= form.text_field :name
			%div.form_controls
				%span.char_ctr
					200
					characters
			
		
		%div
			%p= label_tag :description, 'Describe this session'
			= form.text_area :description, :class=>'autosize'
			%div.form_controls
				%span.char_ctr
					1000
					characters
		
		%p= submit_tag @live_session.id.nil? ? 'Create session' : 'Update session'
			
		%p= link_to 'Back to setup page', live_event_setup_path(params[:live_session_id])