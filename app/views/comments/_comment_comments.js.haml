= render :template => 'shared/clear_sign_in_form', :formats => [:js]
:plain
	var com_coms = $("#{escape_javascript(
		render( :partial=> 'comments/comment_comments', :formats => [:html], :locals=> {:comment => comment, :comments => comments, :com_criteria => com_criteria } )
	)}");
	
	var com = $('div.Comment[id="#{comment.id}"]')
	$('div.comment_comments.discussion[id="#{comment.id}"]').remove()
	var newNode = $(com_coms).insertAfter(com);
	newNode.find('abbr').timeago();
	activate_text_counters_grow( newNode.find('textarea'), 30 );
	
	$('div.comment_comments.discussion[id="#{comment.id}"]').find('a.clear').html('Clear').die('click').live('click',
		function(){
			$(this).closest('form').find('textarea').val('');
			$(this).closest('form').find('div#errorExplanation').remove();
			return false;
		}
	);
	setTimeout( function(){	$('.corner').corner()},100);
	
	if(com_coms.height()>100){
		com_coms.append(com_coms.find('a.com_hide_coms').clone());
	}
	
	$('a.com_hide_coms').die('click').live('click',
		function(){
			// update the number of comments
			var disc = $(this).closest('div.comment_comments');
			var el = disc.prev('div.Comment').find('a.reply')
			if(disc.size() > 0){
		  	var com_cnt = disc.find('div.Comment').size();
		  	switch(com_cnt){
		  		//case 0:
		  		//	el.html('Reply');
		  		//	break;
		  		case 1:
		  			el.html('Show 1 comment');
		  			break;
		  		default:
		  			el.html('Show ' + com_cnt + ' comments' );
		  			break;
		  	}
		  	disc.remove();
		  }
			return false;
		}
	);
