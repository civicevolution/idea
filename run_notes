Notes to run app in development mode

Postgres doesn't autostart on mac as of 9/13/11

	Manully start it
		su - postgres -c '/usr/local/pgsql/bin/pg_ctl start -D /usr/local/pgsql/data -l /usr/local/pgsql/log/logfile -o -i'


cd /ce_development/Rails/tp
rvmsudo rails s --debugger --port=80

PGDATA=/usr/local/pgsql/data
PATH=$PATH:/usr/local/pgsql/bin
export PGDATA PATH
psql

cd /ce_development/Rails/tp

Run console
       rails c
       
       sudo chown briansullivan:admin log/mail.sent.log

RAILS_ENV=development script/monit.notify.sh start
RAILS_ENV=development script/monit.notify.sh stop
	ps aux | grep notification
	
RAILS_ENV=development script/delayed_job start		
RAILS_ENV=development script/delayed_job stop		
	ps aux | grep delayed_job

Process.kill("USR1", IO.read(Rails.root + 'log/notification.rb.pid').chomp.to_i )
Process.kill("USR2", IO.read(Rails.root + 'log/notification.rb.pid').chomp.to_i )

tail -f /var/log/engineyard/apps/app_2029/notification.rb.log
tail -f /var/log/engineyard/apps/app_2029/production.log

replace the development db

stop rails server
stop rails console
stop psql
stop notify and delayed daemons

pg_dump -i -h localhost -p 5432 -U postgres -F c -b -f "tp_production.11.22.11.09.48.pgz" tp

scp brian@civic-db:/var/lib/postgresql/tp_production.11.22.11.09.48.pgz /ce_development/backups/2029_db/
scp /ce_development/backups/2029_db/app_2029_production.10.10.11.09.07.pgz brian@ec2-50-18-101-127.us-west-1.compute.amazonaws.com:.



dropdb tp_development
createdb tp_development
ls -l /ce_development/backups/2029_db/tp_production.*
pg_restore -h localhost -p 5432 -U postgres -d tp_development "/ce_development/backups/2029_db/tp_production.11.22.11.09.48.pgz"

clear the notification requests before starting the daemons
	select * from notification_requests where  match_queue = null;
	update notification_requests set match_queue = null;
	select * from team_content_logs where processed = false;

restart 
	rails s --debugger --port=8001
	RAILS_ENV=development script/delayed_job start		
	RAILS_ENV=development script/monit.notify.sh start
	
Run delayed_job in the foreground
	rake jobs:work
	
	
Run console
	rails c

	sudo chown briansullivan:admin log/mail.sent.log
	
	
Debugging a bad deployment

Look at the logs:

ls /var/log/engineyard/apps/tp

	vi /var/log/engineyard/apps/tp/unicorn.stderr.log
	
	
	vi /var/log/engineyard/apps/tp/unicorn.log


git diff 539ca090e8baff4e1b66889e0704ab12f65aa819 HEAD --name-status
git diff c2a0703b4962f6ce122de44a716a77d53b7a4295 HEAD app/models/notification_request.rb	

http://2029.civicevolution.dev/notification/display_immediate?id=2248
http://2029.civicevolution.dev/notification/display_immediate?id=2248&text=1

http://2029.civicevolution.dev/notification/display_periodic
http://2029.civicevolution.dev/notification/display_periodic?text=1

***********************************************************************************

Sat Oct 15 09:30:28 PDT 2011

***********************************************************************************

Realtime with Nodejs

Start node and redis

On DEV
	cd /ce_development/src/redis-2.2.14
	 $ src/redis-server
		port 6379

	cd /ce_development/node/chat1
	chat1 briansullivan$ juggernaut
	
	how do I use a redis command line client
		cd /ce_development/src/redis-2.2.14
		src/redis-cli
	
	
	
On PROD these are controlled by monit	

•••• sudo ln -s /ce_development/node/chat1/node_modules/juggernaut/server.js /usr/bin/juggernaut
	
netstat -lnptu	

Simple run:	
	http://2029.civicevolution.dev/plan/jug?str=now_856	
	http://localhost:8080/

***********************************************************************************

Tue Oct 18 10:21:36 PDT 2011

***********************************************************************************

Running on DEV

	

1)	Start rails
		cd /ce_development/Rails/tp
		rake log:clear
		rails s --debugger --port=8001

2) 	Start redis
		cd /ce_development/src/redis-2.2.14
		src/redis-server
	
3)	Start juggernaut

			Run regular mode
			
				cd /usr/local/lib/node_modules/juggernaut
				juggernaut
	
			Run in debug mode
				
				Start node inspector debugger
					node-inspector --web-port=8181 & 
		
				Start juggernaut in node in debug mode
					node --debug server.js
						(debugger listening on port 5858)

				Open debugger in browser
					http://0.0.0.0:8181/debug?port=5858	
					
4) Start haproxy
		sudo /usr/local/sbin/haproxy -f /etc/haproxy.cfg -D
	
5) Start notification daemon	
		RAILS_ENV=development script/monit.notify.sh start
		RAILS_ENV=development script/monit.notify.sh stop
		ps aux | grep notification

6) Start dealyed_jobs daemon
		RAILS_ENV=development script/delayed_job start		
		RAILS_ENV=development script/delayed_job stop		
		ps aux | grep delayed_job
		
7) Access redis cli
	cd /ce_development/src/redis-2.2.14
	src/redis-cli

		http://redis.io/commands
			keys *
			type _auth_event_1_theme
			smembers _auth_event_1_theme
			1) "c66440fd170c3c4a47b28b992c3752c0"
		
			2) "80355c5a9f2e568cb9a35a737b27e05c"
		
			hget session_id_channels c66440fd170c3c4a47b28b992c3752c0
				"[\"_auth_event_1\", \"_auth_event_1_theme\", \"_auth_event_1_theme_2\"]"
			hget session_id_channels 80355c5a9f2e568cb9a35a737b27e05c
				"[\"_auth_event_1\", \"_auth_event_1_theme\"]"



	
Upload and apply custom recipes
	attach chef recipes
	  cd /ce_development/Rails/ey-cloud-recipes
	
	YOU MUST DO THIS FROM THE ey-recipes DIRECTORY!
	
	Upload
	  ey recipes upload -e civic_west
	
	Apply
	  ey recipes apply -e civic_west
	
Deploy with migration:
	$ ey deploy -e cw -a tp -r tp -m 'bundle exec rake db:migrate'
	
	
script/rails c	
	
***********************************************************************************

Wed Oct 19 18:57:55 PDT 2011

***********************************************************************************

	rake routes
	
Test routes in console
	
r = ActionController::Routing::Routes	
puts r.routes	
r.recognize_path "/talking_points/2"
 => {:action=>"show", :id=>"2", :controller=>"talking_points"} 

r.recognize_path "/talking_points/2/comments"
 => {:talking_point_id=>"2", :action=>"index", :controller=>"comments"} 

Ok, it still uses the comments controller

r.generate :controller => :station
r.generate :controller => :station, :action=> :index
r.generate :controller => :station, :action=> :index, :id=>42
r.generate :controller => :station, :action=> :index, :id=>42, :param => "xyzzy"

r.recognize_path "/talking_points/2/comments"
	=> {:talking_point_id=>"2", :action=>"index", :controller=>"comments"} 
	
	
http://jscompress.com/	http://www.minifyjavascript.com/

***********************************************************************************

Wed Jan 25 10:22:58 PST 2012

***********************************************************************************

debugging startup issues with logs

/var/log/engineyard/apps/tp
	delayed_job.log
	mail.sent.log
	newrelic_agent.log
	newrelic_agent_store.db
	newrelic_agent_store.pid
	notification.rb.log
	production.log
	unicorn.log
	unicorn.stderr.log
	unicorn.stdout.log
	
sudo monit status

	unicorn.stderr.log
	
	SELECT current_TIMESTAMP AT TIME ZONE 'UTC';
	
***********************************************************************************

Sun Feb  5 08:41:47 PST 2012

***********************************************************************************

Add jquery to any page

var GM_JQ = document.createElement('script');
GM_JQ.src = 'http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js';
GM_JQ.type = 'text/javascript';
document.getElementsByTagName('head')[0].appendChild(GM_JQ);
$('div.title a').click()	

Pallette
	http://colorschemedesigner.com/#1m31T6eunw0w0
	
***********************************************************************************

Tue Feb  7 10:26:58 PST 2012

***********************************************************************************

setup team questions
	
	http://demo.civicevolution.dev/teams/10081/setup