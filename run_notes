Notes to run app in development mode

Postgres doesn't autostart on mac as of 9/13/11

	Manully start it
		su - postgres -c '/usr/local/pgsql/bin/pg_ctl start -D /usr/local/pgsql/data -l /usr/local/pgsql/log/logfile -o -i'


cd /ce_development/Rails/tp
rvmsudo rails s --debugger --port=80

PGDATA=/usr/local/pgsql/data
PATH=$PATH:/usr/local/pgsql/bin
export PGDATA PATH
psql

cd /ce_development/Rails/tp

Run console
       rails c
       
       sudo chown briansullivan:admin log/mail.sent.log

RAILS_ENV=development script/monit.notify.sh start
RAILS_ENV=development script/monit.notify.sh stop
	ps aux | grep notification
	
RAILS_ENV=development script/delayed_job start		
RAILS_ENV=development script/delayed_job stop		
	ps aux | grep delayed_job

Process.kill("USR1", IO.read(Rails.root + 'log/notification.rb.pid').chomp.to_i )
Process.kill("USR2", IO.read(Rails.root + 'log/notification.rb.pid').chomp.to_i )

tail -f /var/log/engineyard/apps/app_2029/notification.rb.log
tail -f /var/log/engineyard/apps/app_2029/production.log

replace the development db

stop rails server
stop rails console
stop psql
stop notify and delayed daemons

pg_dump -i -h localhost -p 5432 -U postgres -F c -b -f "g3_development.03.7.11.11.03.pgz" g3_development

scp /ce_development/backups/2029_db/app_2029_production.10.10.11.09.07.pgz brian@ec2-50-18-101-127.us-west-1.compute.amazonaws.com:.

dropdb tp_development
createdb tp_development
ls -l /ce_development/backups/2029_db/app_2029_production.*
pg_restore -h localhost -p 5432 -U postgres -d tp_development "/ce_development/backups/2029_db/app_2029_production.07.12.11.09.53.pgz"

clear the notification requests before starting the daemons
	update notification_requests set match_queue = null;
	select * from team_content_logs where processed = false;



Run delayed_job in the foreground
	rake jobs:work
	
	
Run console
	rails c

	sudo chown briansullivan:admin log/mail.sent.log
	
	
Debugging a bad deployment

Look at the logs:

ls /var/log/engineyard/apps/tp

	vi /var/log/engineyard/apps/tp/unicorn.stderr.log
	
	
	vi /var/log/engineyard/apps/tp/unicorn.log


git diff 539ca090e8baff4e1b66889e0704ab12f65aa819 HEAD --name-status
git diff c2a0703b4962f6ce122de44a716a77d53b7a4295 HEAD app/models/notification_request.rb	

http://2029.civicevolution.dev/notification/display_immediate?id=2248
http://2029.civicevolution.dev/notification/display_immediate?id=2248&text=1

http://2029.civicevolution.dev/notification/display_periodic
http://2029.civicevolution.dev/notification/display_periodic?text=1

***********************************************************************************

Sat Oct 15 09:30:28 PDT 2011

***********************************************************************************

Realtime with Nodejs

Start node and redis

On DEV
	cd /ce_development/src/redis-2.2.14
	 $ src/redis-server
		port 6379

	cd /ce_development/node/chat1
	chat1 briansullivan$ juggernaut
	
On PROD these are controlled by monit	

•••• sudo ln -s /ce_development/node/chat1/node_modules/juggernaut/server.js /usr/bin/juggernaut
	
netstat -lnptu	

Simple run:	
	http://2029.civicevolution.dev/plan/jug?str=now_856	
	http://localhost:8080/

***********************************************************************************

Tue Oct 18 10:21:36 PDT 2011

***********************************************************************************

Running on DEV

	cd /ce_development/src/redis-2.2.14
	src/redis-server
	
	cd /ce_development/node/chat1
	juggernaut
	
	rails s --debugger --port=8001
	
	sudo /usr/local/sbin/haproxy -f /etc/haproxy.cfg -D
	
	RAILS_ENV=development script/monit.notify.sh start
	RAILS_ENV=development script/monit.notify.sh stop
		ps aux | grep notification

	RAILS_ENV=development script/delayed_job start		
	RAILS_ENV=development script/delayed_job stop		
		ps aux | grep delayed_job
	