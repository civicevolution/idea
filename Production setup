***********************************************************************************

Mon Sep 20 14:58:42 PDT 2010

***********************************************************************************

• Build a new environment
• Boot it
• Attach and run recipes
• Create an application
• Attach an app
• Rebuild environment
• Deploy without migration
• Create db symlinks
• Deploy with migration



+ Create new environment
  test_build
  production
  Mongrel
  brian
  auto
  1.8.7
  CLI deploy
  ssh keys
  Create environment

Do not add any apps yet, click dashboard  
  
Boot instances
  custom 
    174.129.30.74
    application server 1 small
    snapshot new volume
    database server separate 1 small
    snapshot new volume
    Boot this configuration
    

attach chef recipes
  cd /vol/rb/ey-cloud-recipes
  ey recipes upload -e test_build
Then run them
  ey recipes apply -e test_build



Create an application

  name: dummy_for_2029
  repo: git@github.com:civicevolution/civic.git
  App type: Rails 2
  App version: 2.3.5
  Create application

  Add git deploy key to github

  Add gems to application
    diff-lcs 1.1.2
    differ 0.1.1
    haml 3.0.12
    paperclip 2.3.3
    pg 0.9.0
    rails 2.3.5
    ruby-recaptcha 1.0.2


Attach application to environment

  Applications > Add application
  
    Select and click Add to environment
    
    dummy_for_2029 / dummy.civicevolution.org

Rebuild
  ey rebuild -e test_build

Deploy this without migration
 ey deploy -e test_build -a dummy_for_2029 -r master --no-migrate

add the symlink to both app master and db master
  $ cd /data/dummy_for_2029/shared/config
  $ cat keep.database.yml
      production:
        adapter:   postgresql
        database:  cgg_production
        username:  brian
        password:  jGv48qeIMC
        host:      ec2-184-72-188-35.compute-1.amazonaws.com
  $ mv database.yml database.yml.orig.mysql
  $ sudo ln -s keep.database.yml database.yml
  $ cat database.yml
  $ ls -l


Deploy with migration  
  ey deploy -e test_build -a dummy_for_2029 -r master



***********************************************************************************

Mon Sep 20 15:55:26 PDT 2010

***********************************************************************************

Some useful commands

tail -f /var/log/engineyard/apps/dummy_for_2029/production.log
netstat -lnptu

Shows maintenance page
  $ ey web disable -a cgg -e civic

Take down the maintenance page
  $ ey web disable -a cgg -e civic
  
  sudo /etc/init.d/aped start
  sudo /etc/init.d/aped stop  
  
  
dump the database schema & data
  pg_dump cgg_production > cgg_production.09.20.10.1146.data  
  
dump the database data
  pg_dump -a cgg_production > cgg_production.09.20.10.1146.data  
  
  
Control services on the cluster

  sudo monit restart all -g appname
    Where appname is the name of the application you are trying to restart.

  sudo monit stop all -g appname

  sudo monit stop mongrel -g app_2029

  sudo monit -h
  sudo monit status
  sudo monit stop mongrel -g app_2029
  sudo monit status
  sudo monit start mongrel -g app_2029
  sudo monit status

  sudo monit restart mongrel -g app_2029
  
  
git diff --ignore-space-change
  Ignore changes in amount of whitespace. This ignores whitespace at line end, and considers all other sequences of one or more whitespace characters to be equivalent.

  -w  
  
  
STASH YOUR CURRENT CHANGES

  $ git stash save 
  Saved "WIP on master: e71813e..."
  List current stashes

  Yes, you can have more than one!! The stash works like a stack. Every time you save a new stash, it’s put on top of the stack.

  $ git stash list
  stash@{0}: WIP on master: e71813e..."
  Note the stash@{0} part? That’s your stash ID, you’ll need it to restore it later on. Let’s do that right now. The stash ID changes with every stash you make. stash@{0} refers to the last stash you made.

  Apply a stash
  $ git stash apply stash@{0}

  You may notice the stash is still there after you have applied it. You can drop it if you don’t need it any more.
  $ git stash drop stash@{0}

  Or, because the stash acts like a stack, you can pop off the last stash you saved:
  $ git stash pop

  If you want to wipe all your stashes away, run the ‘clear’ command:
  $ git stash clear

  It may very well be that you don’t use stashes that often. If you just want to quickly stash your changes to restore them later, you can leave out the stash ID.
  $ git stash

http://community.engineyard.com/discussions/known-issues/52-problem-with-several-virtual-hosts-and-comma-as-separator


PROXYING IE in WINDOWS

Tools > Internet options > Connections > LAN Settings > Proxy Server
  192.168.1.103:8888
  
Charles must be running when IE is proxying. 
Check mac IP address and adjust Proxy settings as necessary

Check the revision/commit
$ cat /data/app_2029/current/REVISION
  4cf2f96a55761d5bc7a20a558dca0206b760e41d
  
  
  
Compare commits/app versions
  Get the revisions
    cat /data/ncdd/current/REVISION 10e9d9bc7dc3e6b645c49bef6a0941866b3aef21
    cat /data/app_2029/current/REVISION 74170521d993da69e2e743185eeb85930854c2b4

  Compare revisions
      git diff commit1_sha commit2_sha [file]
      git diff commit1_sha commit2_sha --name-status
      
        git diff 74170521d993da69e2e743185eeb85930854c2b4 10e9d9bc7dc3e6b645c49bef6a0941866b3aef21 --name-status

Great 
